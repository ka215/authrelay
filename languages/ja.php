<?php
return [
    'AuthRelay' => 'AuthRelay',
    'This app acts as a mock to generate and pass credentials to the next application or service.' => 'このページはWebアプリの認証処理継承用モックアップです。',
    'Authentication Relay Mockup' => '認証情報中継モック - AuthRelay',
    'This page is a mockup for inheriting the authentication process of a web application, and simulates redirection to continue authentication information to any application after authentication.' => 'このページはWebアプリの認証処理継承用モックアップとして、認証後に任意のアプリへ認証情報を継続させるリダイレクションをシミュレートします。',
    'This mock is intended for web pages such as the login screen or the dashboard after logging in, and allows you to try connecting to a specified web application by choosing from two methods for passing authentication information from there: JWT token format or Cookie format.' => '本モックはログイン画面やログイン後のダッシュボード等のWEBページを想定しており、そこからの認証情報の受け渡し方法をJWTトークン形式とCookie形式の2通りから選んで、指定のWebアプリへの接続を試行することができます。',
    'User ID' => 'ユーザーID',
    'Secret Key' => 'シークレットキー',
    'Redirect URL' => '遷移先URL',
    'Roles' => 'ユーザー権限',
    'Subscriber (Readonly User)' => '購読者（Readonly User）',
    'Editor (Editable User)' => '編集者（Editable User）',
    'Substituter (Substitute Editor)' => '代用者（Substitute Editor）',
    'Administrator' => '管理者（Administrator）',
    'Credential Format' => '認証情報形式',
    'JWT (JSON Web Token)' => 'JWT（JSON Webトークン）',
    'Session Cookies' => 'セッションCookie',
    'Algorithm' => '署名アルゴリズム',
    'HS256' => 'HS256',
    'HS384' => 'HS384',
    'HS512' => 'HS512',
    'RS256 (with Private Key)' => 'RS256（要秘密鍵）',
    'RS384 (with Private Key)' => 'RS384（要秘密鍵）',
    'RS512 (with Private Key)' => 'RS512（要秘密鍵）',
    'RS256 (with Private Key)' => 'ES256（要秘密鍵）',
    'RS384 (with Private Key)' => 'ES384（要秘密鍵）',
    'RS512 (with Private Key)' => 'ES512（要秘密鍵）',
    'Private Key File' => '秘密鍵ファイル',
    'Private Key File Path' => '秘密鍵のファイルパス',
    'Connection Method' => '接続方法',
    'Include in HTTP header' => 'HTTPヘッダー経由',
    'Auto-Send using Cookies' => 'Cookie経由',
    'Connection Specification' => '接続仕様',
    'Redirect with JWT token or session ID included in the HTTP header' => 'JWTトークンまたはセッションIDをHTTPヘッダーに含めてリダイレクト',
    'Save JWT token or session information in a cookie and automatically send it to the redirect destination' => 'JWTトークンまたはセッション情報をCookieに保存し、リダイレクト先で自動送信',
    'Security' => 'セキュリティ',
    'High resistance to CSRF' => 'CSRF耐性が高い',
    'CSRF countermeasures required (<code>SameSite</code> is mandatory)' => 'CSRF対策が必要（<code>SameSite</code>必須）',
    'Ease of Implementation' => '実装の容易さ',
    'Requires manual header configuration' => '手動でヘッダーを設定する必要がある',
    'Browser automatically sends cookies' => 'ブラウザが自動的にCookieを送信',
    'State Management Flexibility' => '状態管理の柔軟性',
    'Frontend can manage tokens' => 'フロントエンドがトークンを管理可能',
    'Server-side session management is easier' => 'サーバーでセッション管理が容易',
    'Token Visibility' => 'トークンの可視性',
    'Easily accessible via JavaScript' => 'JavaScriptで容易にアクセス可能',
    'Can be hidden from JavaScript using <code>HttpOnly</code>' => '<code>HttpOnly</code>でJavaScriptから非公開可能',
    'Use Case' => 'ユースケース',
    'Suitable for direct communication with API clients' => 'APIクライアントとの直接通信に適する',
    'Suitable for user sessions' => 'ユーザーセッションに適する',
    'Simulate (Dry-Run)' => 'リクエスト確認',
    'Connect' => '接続する',
    'Reset' => 'リセット',
    'Request Information' => 'リクエスト情報',
];
